<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://cdn.tailwindcss.com"></script>
    <title>Student Management</title>
</head>

<body>
    <nav class="bg-white border-gray-200 dark:bg-gray-900">
        <div class="max-w-screen-xl flex flex-wrap items-center justify-between mx-auto p-4">
            <a href="" class="flex items-center space-x-3 rtl:space-x-reverse">
                <span class="self-center text-2xl font-semibold whitespace-nowrap dark:text-white">Student
                    Management</span>
            </a>
            <div class="hidden w-full md:block md:w-auto" id="navbar-default">
                <ul
                    class="font-medium flex flex-col p-4 md:p-0 mt-4 border border-gray-100 rounded-lg bg-gray-50 md:flex-row md:space-x-8 rtl:space-x-reverse md:mt-0 md:border-0 md:bg-white dark:bg-gray-800 md:dark:bg-gray-900 dark:border-gray-700">
                    <li>
                        <a href="electives"
                            class="block py-2 px-3 text-white bg-blue-700 rounded-sm md:bg-transparent md:text-blue-700 md:p-0 dark:text-white md:dark:text-blue-500"
                            aria-current="page">Electives List</a>
                    </li>
                    <li>
                        <a href="" onclick="logout(event)"
                            class="block py-2 px-3 text-white bg-blue-700 rounded-sm md:bg-transparent md:text-blue-700 md:p-0 dark:text-white md:dark:text-blue-500">Logout</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
    <div class="flex justify-center p-5">
        <!-- Add Student Form -->
        <div class="w-1/4 shadow-xl rounded-xl border p-5">
            <h2 class="text-lg font-semibold mb-4" id="formTitle">Add Student</h2>
            <form id="studentForm" action="/students/add" method="POST">
                <input type="hidden" id="studentId" name="studentId" />
                <div class="mb-4">
                    <label for="name" class="block text-sm font-medium text-gray-700">Name of Student</label>
                    <input type="text" id="name" placeholder="Name of student" required name="name"
                        class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm focus:ring focus:ring-blue-500 focus:border-blue-500 p-2" />
                </div>
                <div class="mb-4">
                    <label for="age" class="block text-sm font-medium text-gray-700">Age</label>
                    <input type="number" id="age" placeholder="Age" required name="age"
                        class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm focus:ring focus:ring-blue-500 focus:border-blue-500 p-2" />
                </div>
                <div class="mb-4">
                    <label for="address" class="block text-sm font-medium text-gray-700">Address</label>
                    <input type="text" id="address" placeholder="Address" required name="address"
                        class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm focus:ring focus:ring-blue-500 focus:border-blue-500 p-2" />
                </div>
                <div class="mb-4">
                    <label for="gender" class="block text-sm font-medium text-gray-700">Gender</label>
                    <select name="gender" id="gender" required
                        class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm focus:ring focus:ring-blue-500 focus:border-blue-500 p-2">
                        <option value="Male">Male</option>
                        <option value="Female">Female</option>
                    </select>
                </div>
                <div class="mb-4">
                    <label class="block text-sm font-medium text-gray-700 mb-2">Electives</label>
                    <div class="space-y-2 max-h-40 overflow-y-auto border rounded-md p-2">
                        <% electives.forEach(elective=> { %>
                            <div class="flex items-center">
                                <input type="checkbox" id="elective_<%= elective.id %>" name="electives"
                                    value="<%= elective.id %>"
                                    class="h-4 w-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500">
                                <label for="elective_<%= elective.id %>" class="ml-2 block text-sm text-gray-900">
                                    <%= elective.name %>
                                </label>
                            </div>
                            <% }); %>
                    </div>
                </div>
                <div class="flex gap-2">
                    <button type="submit" id="submitBtn"
                        class="w-full bg-blue-500 text-white font-bold py-2 rounded hover:bg-blue-600 transition duration-200">
                        Add Student
                    </button>
                    <button type="button" id="cancelBtn"
                        class="hidden w-full bg-gray-500 text-white font-bold py-2 rounded hover:bg-gray-600 transition duration-200">
                        Cancel
                    </button>
                </div>
            </form>
        </div>

        <!-- List of Students -->
        <div class="w-3/4 p-5">
            <h2 class="text-lg font-semibold mb-4">Students List</h2>
            <div class="relative overflow-x-auto shadow-md sm:rounded-lg">
                <table class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400">

                    <thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
                        <tr>
                            <th class="px-6 py-3">Name</th>
                            <th class="px-6 py-3">Age</th>
                            <th class="px-6 py-3">Address</th>
                            <th class="px-6 py-3">Gender</th>
                            <th class="px-6 py-3">Electives</th>
                            <th class="px-6 py-3">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% students.forEach(student=> { %>
                            <tr
                                class="bg-white border-b dark:bg-gray-800 dark:border-gray-700 border-gray-200 hover:bg-gray-50 dark:hover:bg-gray-600">
                                <td class="px-6 py-3">
                                    <%= student.name %>
                                </td>
                                <td class="px-6 py-3">
                                    <%= student.age %>
                                </td>
                                <td class="px-6 py-3">
                                    <%= student.address %>
                                </td>
                                <td class="px-6 py-3">
                                    <%= student.gender %>
                                </td>
                                <td class="px-6 py-3">
                                    <div class="flex flex-wrap gap-1">
                                        <% if (student.elective_names && student.elective_names !=='No electives' ) { %>
                                            <% student.elective_names.split(', ').forEach(elective => { %>
                                                <span class="bg-blue-100 text-blue-800 text-xs font-medium px-2.5 py-0.5 rounded-full">
                                                    <%= elective %>
                                                </span>
                                            <% }); %>
                                        <% } else { %>
                                            <span class="text-gray-500 text-sm">No electives</span>
                                        <% } %>
                                    </div>
                                </td>
                                <td class="px-6 py-3">
                                    <button onclick="editStudent(' <%=student.id %>')"
                                                class="text-blue-500 hover:underline">Edit</button>
                                                <button onclick="deleteStudent('<%= student.id %>')"
                                                    class="text-red-500 hover:underline ml-2">Delete</button>
                                </td>
                            </tr>
                            <% }); %>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</body>
<script>
    // window.addEventListener('load', function () {
    //     const token = localStorage.getItem('token');
    //     if (token) {
    //         window.location.href = '/students';
    //         return;
    //     }
    // });

    const token = localStorage.getItem('token');
    if (!token) {
        window.location.href = '/login';
    }
    function getAuthHeaders() {
        const token = localStorage.getItem('token');
        return {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${token}`
        };
    }
    function logout(event) {
        event.preventDefault();

        localStorage.removeItem('token');
        console.log("Logging out...");

        setTimeout(() => {
            window.location.href = '/login';
        }, 100);
    }

    function deleteStudent(studentId) {
        if (confirm('Are you sure you want to delete this student?')) {
            fetch(`/students/delete/${studentId}`, {
                method: 'DELETE',
                headers: getAuthHeaders()
            })
                .then(response => {
                    if (response.ok) {
                        window.location.reload();
                    } else {
                        throw new Error('Failed to delete student');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }
    }

    const studentForm = document.getElementById('studentForm');
    const formTitle = document.getElementById('formTitle');
    const submitBtn = document.getElementById('submitBtn');
    const cancelBtn = document.getElementById('cancelBtn');

    function editStudent(studentId) {
        fetch(`/students/${studentId}`, {
            headers: getAuthHeaders()
        })
            .then(response => {
                if (!response.ok) {
                    if (response.status === 401) {
                        window.location.href = '/auth/login';
                        throw new Error('Please login first');
                    }
                    throw new Error('Failed to load student data');
                }
                return response.json();
            })
            .then(student => {
                console.log('Fetched :', student);
                document.getElementById('studentId').value = student.id;
                document.getElementById('name').value = student.name;
                document.getElementById('age').value = student.age;
                document.getElementById('address').value = student.address;
                document.getElementById('gender').value = student.gender;

                const electiveIds = student.elective_ids || [];
                document.querySelectorAll('input[name="electives"]').forEach(checkbox => {
                    checkbox.checked = electiveIds.includes(checkbox.value);
                });

                formTitle.textContent = 'Edit Student';
                submitBtn.textContent = 'Update Student';
                cancelBtn.classList.remove('hidden');
                studentForm.method = 'PUT';
            })
            .catch(error => {
                console.error('Error:', error);
            });
    }

    studentForm.addEventListener('submit', function (e) {
        e.preventDefault();
        const formData = new FormData(this);
        const studentId = document.getElementById('studentId').value;
        const method = studentId ? 'PUT' : 'POST';
        const url = studentId ? `/students/${studentId}` : '/students/add';

        const data = {
            name: formData.get('name'),
            age: parseInt(formData.get('age')),
            address: formData.get('address'),
            gender: formData.get('gender'),
            electives: Array.from(document.querySelectorAll('input[name="electives"]:checked')).map(cb => cb.value)
        };

        fetch(url, {
            method: method,
            headers: getAuthHeaders(),
            body: JSON.stringify(data),
        })
            .then(response => {
                if (!response.ok) {
                    if (response.status === 401) {
                        window.location.href = '/auth/login';
                        throw new Error('Please login first');
                    }
                    throw new Error('Failed to save student');
                }
                window.location.reload();
            })
            .catch(error => {
                console.error('Error:', error);
            });
    });

    cancelBtn.addEventListener('click', function () {
        studentForm.reset();
        document.getElementById('studentId').value = '';
        formTitle.textContent = 'Add Student';
        submitBtn.textContent = 'Add Student';
        cancelBtn.classList.add('hidden');
        studentForm.action = '/students/add';
        studentForm.method = 'POST';
    });
</script>

</html>